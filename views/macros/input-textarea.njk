{% from 'label-text.njk' import labelText with context  %}
{% from 'hint-text.njk' import hintText with context %}
{% from 'validation-message.njk' import validationMessage with context %}

{#
  - `name`: field name
  - `label`: text for the label
  - `attributes`: object of optional attributes: id, class, hint, divClasses, autocomplete
#}
{% if errors %}
    {% set firstError = errors[errors.keys()[0]] %}
{% endif %}

{% macro textArea(name, label, attributes) %}
    <div class="{{ 'has-error' if errors and errors[name] }} {{ attributes.divClasses }}">
        <label for="{{ name }}" id="{{ name }}__label">
        {{ labelText(label, attributes.required) }}
        </label>
        {{ hintText(attributes.hint) }}
        {{ validationMessage(errors, name) }}
        <textarea class="{{ attributes.class if attributes.class else "w-3-4" }}" id="{{ attributes.id if attributes.id else name }}" {% if errors and errors[name] %} aria-describedby="{{ name + '-error' }}" aria-invalid="true" {% endif %} {% if errors and firstError.param === name %} autofocus="true" {% endif %} name="{{ name }}">{{ data[name] }}</textarea>
    </div>
{% endmacro %}